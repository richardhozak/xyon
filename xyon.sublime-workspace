{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Las",
				"last_query	statement"
			],
			[
				"last_",
				"last_query	statement"
			],
			[
				"le",
				"leftMargin"
			],
			[
				"url",
				"urllib	module"
			],
			[
				"loa",
				"loads	function"
			],
			[
				"reply",
				"reply_finished	function"
			],
			[
				"pyqtS",
				"pyqtSlot	import"
			],
			[
				"PYqt",
				"PyQt5"
			],
			[
				"pyq",
				"pyqtSlot	import"
			],
			[
				"PY",
				"PyQt5"
			],
			[
				"append",
				"append"
			],
			[
				"list",
				"listdata	statement"
			],
			[
				"appen",
				"append_item	function"
			],
			[
				"QObject",
				"QObjectListModel	class"
			],
			[
				"app",
				"append"
			],
			[
				"QQMl",
				"QQmlListProperty	import"
			],
			[
				"ancho",
				"anchors.fill	fill"
			],
			[
				"link",
				"link_id	statement"
			],
			[
				"writ",
				"write	function"
			],
			[
				"write",
				"writelines	function"
			],
			[
				"w",
				"write	function"
			],
			[
				"std",
				"stdout	class"
			],
			[
				"has",
				"hasClient"
			],
			[
				"pa",
				"parse"
			],
			[
				"wr",
				"wrapped_fun"
			],
			[
				"resu",
				"results_dict"
			],
			[
				"sea",
				"search_results"
			],
			[
				"res",
				"results_dict"
			],
			[
				"q",
				"query_string"
			],
			[
				"re",
				"result"
			],
			[
				"fin",
				"findall"
			],
			[
				"server",
				"server"
			],
			[
				"a",
				"audio"
			]
		]
	},
	"buffers":
	[
		{
			"file": "xyon/main.py",
			"settings":
			{
				"buffer_size": 840,
				"line_ending": "Unix"
			}
		},
		{
			"file": "xyon/model/qobjectlistmodel.py",
			"settings":
			{
				"buffer_size": 1824,
				"line_ending": "Unix"
			}
		},
		{
			"file": "xyon/ui/SuggestionBox.qml",
			"settings":
			{
				"buffer_size": 4937,
				"line_ending": "Unix"
			}
		},
		{
			"file": "xyon/ui/Search.qml",
			"settings":
			{
				"buffer_size": 8317,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import model.qobjectlistmodel\nimport model.youtubeservice\n\nimport json\nimport urllib.parse\n\nfrom PyQt5.QtCore import QObject, pyqtSignal, pyqtProperty, pyqtSlot, QUrl\nfrom PyQt5.QtMultimedia import QMediaPlayer\nfrom PyQt5.QtNetwork import *\n\n\nclass Controller(QObject):\n\n    def __init__(self, parent=None):\n        super(Controller, self).__init__(parent)\n        self._searchlist = model.qobjectlistmodel.QObjectListModel([])\n        self._player = QMediaPlayer(self)\n        self._playlist = model.playlist.Playlist(self._player)\n        self._canGoPrevPage = False\n        self._canGoNextPage = False\n        self._ytService = model.youtubeservice.YoutubeService()\n        self._playlist.resolveUrl.connect(self.resolveUrl)\n        self._network_manager = QNetworkAccessManager(self)\n        self._network_manager.finished.connect(self.reply_finished)\n        self._queryList = model.qobjectlistmodel.QObjectListModel([])\n        self._loadedPage = 0\n\n    canGoPrevPageChanged = pyqtSignal()\n\n    @pyqtProperty(bool, notify=canGoPrevPageChanged)\n    def canGoPrevPage(self):\n        return self._canGoPrevPage\n\n    @canGoPrevPage.setter\n    def canGoPrevPage(self, value):\n        if self._canGoPrevPage != value:\n            self._canGoPrevPage = value\n            self.canGoPrevPage.emit()\n\n    canGoNextPageChanged = pyqtSignal()\n\n    @pyqtProperty(bool)\n    def canGoNextPage(self):\n        return self._canGoNextPage\n\n    @canGoNextPage.setter\n    def canGoNextPage(self, value):\n        if self._canGoNextPage != value:\n            self._canGoNextPage = value\n            self.canGoNextPageChanged.emit()\n\n    @pyqtProperty(model.playlist.Playlist, constant=True)\n    def playlist(self):\n        return self._playlist\n\n    @pyqtProperty(QMediaPlayer, constant=True)\n    def player(self):\n        return self._player\n\n    @pyqtProperty(model.qobjectlistmodel.QObjectListModel, constant=True)\n    def searchlist(self):\n        return self._searchlist\n\n    @pyqtSlot(str)\n    def search(self, query, page=1):\n        results = self._ytService.search(query, page)\n        if page == 1:\n            self._searchlist.clear()\n        for entry in results:\n            self._searchlist.append(entry)\n\n    @pyqtSlot()\n    def load_more(self):\n        if self._loadedPage != 0:\n            self._loadedPage += 1\n            self.search()\n\n    @pyqtSlot(str)\n    def query_completion(self, text):\n        if text is None or text == \"\":\n            print(\"Empty query\")\n            self.reply_finished(None)\n        else:\n            print(\"Querying completion for\", text)\n            self._network_manager.get(QNetworkRequest(QUrl(\"http://suggestqueries.google.com/complete/search?client=firefox&ds=yt&\" + urllib.parse.urlencode({\"q\": text}))))\n\n    @pyqtProperty(model.qobjectlistmodel.QObjectListModel, constant=True)\n    def queryList(self):\n        return self._queryList\n\n    @pyqtSlot(QNetworkReply)\n    def reply_finished(self, reply):\n        if reply is None:\n            self._queryList.clear()\n        else:\n            data_str = reply.readAll().data().decode(\"utf-8\")\n            obj = json.loads(data_str)\n            if len(obj) == 2:\n                print(\"reply\", obj[1])\n                self._queryList.setObjectList(obj[1])\n            else:\n                self._queryList.clear()\n\n    def resolveUrl(self, entry):\n        print(\"resolving url for\", entry.type, entry.title)\n        url = self._ytService.resolve_url(entry.url)\n        self._playlist.urlResolved(entry, url)\n",
			"file": "xyon/model/controller.py",
			"file_size": 3436,
			"file_write_time": 130725189078001099,
			"settings":
			{
				"buffer_size": 3494,
				"line_ending": "Unix"
			}
		},
		{
			"file": "xyon/model/youtubeservice.py",
			"settings":
			{
				"buffer_size": 3013,
				"line_ending": "Unix"
			}
		},
		{
			"file": "xyon/ui/main.qml",
			"settings":
			{
				"buffer_size": 2229,
				"line_ending": "Unix"
			}
		},
		{
			"file": "xyon/ui/MainContent.qml",
			"settings":
			{
				"buffer_size": 13655,
				"line_ending": "Unix"
			}
		},
		{
			"file": "xyon/ui/ui.qrc",
			"settings":
			{
				"buffer_size": 271,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Xyon Resource Compiler",
	"command_palette":
	{
		"height": 75.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"",
				"Anaconda: Display object docs"
			],
			[
				"install p",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/richard/Workspace/PyXyon/xyon",
		"/home/richard/Workspace/PyXyon/xyon/images",
		"/home/richard/Workspace/PyXyon/xyon/model",
		"/home/richard/Workspace/PyXyon/xyon/ui"
	],
	"file_history":
	[
		"/home/richard/Workspace/PyXyon/xyon/ui/SuggestionBox",
		"/home/richard/.config/sublime-text-3/Packages/User/resource_build.sublime-build",
		"/home/richard/Workspace/PyXyon/xyon.sublime-workspace",
		"/home/richard/Workspace/PyXyon/xyon/ui/main.qml",
		"/home/richard/Workspace/PyXyon/xyon.sublime-build",
		"/home/richard/Workspace/PyXyon/xyon.sublime-project",
		"/home/richard/.config/sublime-text-3/Packages/User/SublimeOnSaveBuild.sublime-settings",
		"/home/richard/Workspace/PyXyon/xyon/ui/resources.py",
		"/home/richard/Workspace/PyXyon/compile_resources.sh",
		"/home/richard/Workspace/PyXyon/test.sh",
		"/home/richard/.config/sublime-text-3/Packages/SublimeOnSaveBuild/SublimeOnSaveBuild.sublime-settings",
		"/home/richard/Workspace/PyQt-gpl-5.4.1/examples/qml/referenceexamples/properties.py",
		"/home/richard/Workspace/PyXyon/xyon/__init__.py",
		"/home/richard/Workspace/PyXyon/xyon/ui/TestRect.qml",
		"/home/richard/Projects/xyon-server/xyon-server.py",
		"/home/richard/Desktop/websites.html",
		"/home/richard/ytlink.py",
		"/home/richard/ytsearch.py",
		"/home/richard/Desktop/A_websites.md",
		"/home/richard/Projects/QProperties/QProperties/bin/Debug/icon.svg"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"acceptText",
			"incrementCurrentIndex",
			"lambda",
			"maxlen",
			"\n        ",
			"lala",
			"id",
			"query",
			"r",
			"response",
			"names",
			"wrapped_fun"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "xyon/main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 840,
						"regions":
						{
						},
						"selection":
						[
							[
								840,
								840
							]
						],
						"settings":
						{
							"syntax": "Packages/Python 3/Python3.tmLanguage",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "xyon/model/qobjectlistmodel.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1824,
						"regions":
						{
						},
						"selection":
						[
							[
								1711,
								1711
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 326.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "xyon/ui/SuggestionBox.qml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4937,
						"regions":
						{
						},
						"selection":
						[
							[
								257,
								257
							]
						],
						"settings":
						{
							"syntax": "Packages/QML/Support/QML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "xyon/ui/Search.qml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8317,
						"regions":
						{
						},
						"selection":
						[
							[
								6479,
								6479
							]
						],
						"settings":
						{
							"syntax": "Packages/QML/Support/QML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2856.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "xyon/model/controller.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3494,
						"regions":
						{
						},
						"selection":
						[
							[
								2336,
								2336
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 459.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "xyon/model/youtubeservice.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3013,
						"regions":
						{
						},
						"selection":
						[
							[
								2426,
								2426
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 918.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "xyon/ui/main.qml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2229,
						"regions":
						{
						},
						"selection":
						[
							[
								397,
								397
							]
						],
						"settings":
						{
							"syntax": "Packages/QML/Support/QML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "xyon/ui/MainContent.qml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13655,
						"regions":
						{
						},
						"selection":
						[
							[
								7902,
								7902
							]
						],
						"settings":
						{
							"syntax": "Packages/QML/Support/QML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 3009.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "xyon/ui/ui.qrc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 271,
						"regions":
						{
						},
						"selection":
						[
							[
								246,
								246
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 154.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "xyon.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 190.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
